import { Controller, Get, Query, ValidationPipe, UseGuards } from '@nestjs/common';
import { ThrottlerGuard, Throttle } from '@nestjs/throttler';
import { SearchService } from './search.service';
import { SearchQueryDto } from './dto/search.dto';

@UseGuards(ThrottlerGuard)
@Throttle('search') // 10 requêtes / 10 secondes par IP pour ce contrôleur
@Controller('search')
export class SearchController {
  constructor(private readonly searchService: SearchService) {}

  @Get()
  async search(
    @Query(new ValidationPipe({ transform: true, whitelist: true })) query: SearchQueryDto,
  ) {
    return this.searchService.search(query);
  }

  @Get('health')
  async health() {
    await this.searchService.search({ q: '', limit: 1, offset: 0 });
    return { status: 'ok' };
  }
}
